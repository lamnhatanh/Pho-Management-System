/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pho;

import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anh
 */
public class CheckOut extends javax.swing.JFrame {
    Menu itemPrice = new Menu();

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanelPho = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelSpecial = new javax.swing.JLabel();
        jLabelSteak = new javax.swing.JLabel();
        jLabelBrisket = new javax.swing.JLabel();
        jLabelSandF = new javax.swing.JLabel();
        jLabelSTT = new javax.swing.JLabel();
        jLabelMeatball = new javax.swing.JLabel();
        jTextSSpecial = new javax.swing.JTextField();
        jTextLSpecial = new javax.swing.JTextField();
        jTextSSteak = new javax.swing.JTextField();
        jTextLSteak = new javax.swing.JTextField();
        jTextSBrisket = new javax.swing.JTextField();
        jTextLBrisket = new javax.swing.JTextField();
        jTextSSandF = new javax.swing.JTextField();
        jTextLSandF = new javax.swing.JTextField();
        jTextSSTT = new javax.swing.JTextField();
        jTextLSTT = new javax.swing.JTextField();
        jTextSMeatball = new javax.swing.JTextField();
        jTextLMeatball = new javax.swing.JTextField();
        jButtonSSpecial = new javax.swing.JButton();
        jButtonLSpecial = new javax.swing.JButton();
        jButtonSSteak = new javax.swing.JButton();
        jButtonLSteak = new javax.swing.JButton();
        jButtonSBrisket = new javax.swing.JButton();
        jButtonLBrisket = new javax.swing.JButton();
        jButtonSSandF = new javax.swing.JButton();
        jButtonLSandF = new javax.swing.JButton();
        jButtonSSTT = new javax.swing.JButton();
        jButtonLSTT = new javax.swing.JButton();
        jButtonSMeatball = new javax.swing.JButton();
        jButtonLMeatball = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanelDrink = new javax.swing.JPanel();
        jLabelIC = new javax.swing.JLabel();
        jLabelHC = new javax.swing.JLabel();
        jLabelSoda = new javax.swing.JLabel();
        jLabelBW = new javax.swing.JLabel();
        jLabelOJ = new javax.swing.JLabel();
        jLabelTea = new javax.swing.JLabel();
        jLabelSmoothies = new javax.swing.JLabel();
        jTextSmoothies = new javax.swing.JTextField();
        jTextIC = new javax.swing.JTextField();
        jTextHC = new javax.swing.JTextField();
        jTextSoda = new javax.swing.JTextField();
        jTextOJ = new javax.swing.JTextField();
        jTextBW = new javax.swing.JTextField();
        jTextTea = new javax.swing.JTextField();
        jButtonSmoothies = new javax.swing.JButton();
        jButtonIC = new javax.swing.JButton();
        jButtonHC = new javax.swing.JButton();
        jButtonSoda = new javax.swing.JButton();
        jButtonBW = new javax.swing.JButton();
        jButtonOJ = new javax.swing.JButton();
        jButtonTea = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDisplay = new javax.swing.JTable();
        jPanelTotal = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextSubTotal = new javax.swing.JTextField();
        jTextTax = new javax.swing.JTextField();
        jTextTotal = new javax.swing.JTextField();
        jButtonTotal = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableProfit = new javax.swing.JTable();
        jTextProfit = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanelPay = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextAmountPay = new javax.swing.JTextField();
        jTextChange = new javax.swing.JTextField();
        jButtonPay = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jButtonVoidAll = new javax.swing.JButton();
        jButtonVoidItem = new javax.swing.JButton();
        jButtonTotalProfit = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check Out System");
        setBackground(new java.awt.Color(102, 102, 102));
        setMinimumSize(new java.awt.Dimension(1390, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pho/Pho Application Logo.gif"))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe Script", 3, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Pho Viet Management System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.getAccessibleContext().setAccessibleName("Pho Viet Management Application");

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1457, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Cashier Name: ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 35));

        jLabelName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel2.add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 110, 35));

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 850, 364, 53));

        jPanelPho.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 5));

        jLabel4.setText("Small");

        jLabel5.setText("Large");

        jLabelSpecial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSpecial.setText("Special Beef Combo Soup");

        jLabelSteak.setText("Rare Steak Beef Soup");

        jLabelBrisket.setText("Lean Well-Done Brisket Beef Soup");

        jLabelSandF.setText("Rare Steak and Flank Beef Soup");

        jLabelSTT.setText("Rare Steak, Tendon, Tripe Beef Soup");

        jLabelMeatball.setText("Meatball Beef Soup");

        jTextSSpecial.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSSpecial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSSpecial.setText("0");

        jTextLSpecial.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLSpecial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLSpecial.setText("0");
        jTextLSpecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLSpecialActionPerformed(evt);
            }
        });

        jTextSSteak.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSSteak.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSSteak.setText("0");

        jTextLSteak.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLSteak.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLSteak.setText("0");

        jTextSBrisket.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSBrisket.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSBrisket.setText("0");

        jTextLBrisket.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLBrisket.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLBrisket.setText("0");

        jTextSSandF.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSSandF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSSandF.setText("0");

        jTextLSandF.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLSandF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLSandF.setText("0");

        jTextSSTT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSSTT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSSTT.setText("0");

        jTextLSTT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLSTT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLSTT.setText("0");

        jTextSMeatball.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSMeatball.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSMeatball.setText("0");

        jTextLMeatball.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextLMeatball.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextLMeatball.setText("0");

        jButtonSSpecial.setText("Add");
        jButtonSSpecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSSpecialActionPerformed(evt);
            }
        });

        jButtonLSpecial.setText("Add");
        jButtonLSpecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLSpecialActionPerformed(evt);
            }
        });

        jButtonSSteak.setText("Add");
        jButtonSSteak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSSteakActionPerformed(evt);
            }
        });

        jButtonLSteak.setText("Add");
        jButtonLSteak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLSteakActionPerformed(evt);
            }
        });

        jButtonSBrisket.setText("Add");
        jButtonSBrisket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSBrisketActionPerformed(evt);
            }
        });

        jButtonLBrisket.setText("Add");
        jButtonLBrisket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLBrisketActionPerformed(evt);
            }
        });

        jButtonSSandF.setText("Add");
        jButtonSSandF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSSandFActionPerformed(evt);
            }
        });

        jButtonLSandF.setText("Add");
        jButtonLSandF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLSandFActionPerformed(evt);
            }
        });

        jButtonSSTT.setText("Add");
        jButtonSSTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSSTTActionPerformed(evt);
            }
        });

        jButtonLSTT.setText("Add");
        jButtonLSTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLSTTActionPerformed(evt);
            }
        });

        jButtonSMeatball.setText("Add");
        jButtonSMeatball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSMeatballActionPerformed(evt);
            }
        });

        jButtonLMeatball.setText("Add");
        jButtonLMeatball.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLMeatballActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPhoLayout = new javax.swing.GroupLayout(jPanelPho);
        jPanelPho.setLayout(jPanelPhoLayout);
        jPanelPhoLayout.setHorizontalGroup(
            jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPhoLayout.createSequentialGroup()
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelPhoLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPhoLayout.createSequentialGroup()
                                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelBrisket)
                                    .addComponent(jLabelSTT)
                                    .addComponent(jLabelMeatball))
                                .addGap(63, 63, 63)
                                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelPhoLayout.createSequentialGroup()
                                        .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextSSandF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextSSTT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextSMeatball, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPhoLayout.createSequentialGroup()
                                                .addComponent(jButtonSSandF)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextLSandF, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPhoLayout.createSequentialGroup()
                                                .addComponent(jButtonSSTT)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextLSTT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPhoLayout.createSequentialGroup()
                                                .addComponent(jButtonSMeatball)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextLMeatball, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanelPhoLayout.createSequentialGroup()
                                        .addComponent(jTextSBrisket, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonSBrisket)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextLBrisket, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanelPhoLayout.createSequentialGroup()
                                .addComponent(jLabelSteak)
                                .addGap(146, 146, 146)
                                .addComponent(jTextSSteak, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSSteak)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextLSteak, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPhoLayout.createSequentialGroup()
                                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelSandF)
                                    .addGroup(jPanelPhoLayout.createSequentialGroup()
                                        .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addGroup(jPanelPhoLayout.createSequentialGroup()
                                                .addComponent(jLabelSpecial)
                                                .addGap(124, 124, 124)
                                                .addComponent(jTextSSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonSSpecial)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanelPhoLayout.createSequentialGroup()
                        .addGap(486, 486, 486)
                        .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextLSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonLSpecial)
                    .addComponent(jButtonLSteak)
                    .addComponent(jButtonLBrisket)
                    .addComponent(jButtonLSandF)
                    .addComponent(jButtonLSTT)
                    .addComponent(jButtonLMeatball)))
        );
        jPanelPhoLayout.setVerticalGroup(
            jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPhoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSpecial)
                    .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextSSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextLSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSSpecial)
                        .addComponent(jButtonLSpecial)))
                .addGap(38, 38, 38)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSteak)
                    .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextSSteak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextLSteak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSSteak)
                        .addComponent(jButtonLSteak)))
                .addGap(32, 32, 32)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBrisket)
                    .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextSBrisket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextLBrisket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSBrisket)
                        .addComponent(jButtonLBrisket)))
                .addGap(37, 37, 37)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSandF)
                    .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextSSandF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextLSandF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSSandF)
                        .addComponent(jButtonLSandF)))
                .addGap(36, 36, 36)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSTT)
                    .addComponent(jTextSSTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextLSTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSSTT)
                    .addComponent(jButtonLSTT))
                .addGap(37, 37, 37)
                .addGroup(jPanelPhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMeatball)
                    .addComponent(jTextSMeatball, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextLMeatball, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSMeatball)
                    .addComponent(jButtonLMeatball)))
        );

        getContentPane().add(jPanelPho, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 650, 480));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255), 5));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 102, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Beef Noodle Soup");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 650, 70));

        jPanelDrink.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 5));

        jLabelIC.setText("Iced Coffee");

        jLabelHC.setText("Hot Coffee");

        jLabelSoda.setText("Soda");

        jLabelBW.setText("Bottled Water");

        jLabelOJ.setText("Orange Juice");

        jLabelTea.setText("Tea");

        jLabelSmoothies.setText("Smoothies");

        jTextSmoothies.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSmoothies.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSmoothies.setText("0");

        jTextIC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextIC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextIC.setText("0");

        jTextHC.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextHC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextHC.setText("0");

        jTextSoda.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextSoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSoda.setText("0");
        jTextSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSodaActionPerformed(evt);
            }
        });

        jTextOJ.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextOJ.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextOJ.setText("0");

        jTextBW.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextBW.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextBW.setText("0");

        jTextTea.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextTea.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextTea.setText("0");

        jButtonSmoothies.setText("Add");
        jButtonSmoothies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSmoothiesActionPerformed(evt);
            }
        });

        jButtonIC.setText("Add");
        jButtonIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonICActionPerformed(evt);
            }
        });

        jButtonHC.setText("Add");
        jButtonHC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHCActionPerformed(evt);
            }
        });

        jButtonSoda.setText("Add");
        jButtonSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSodaActionPerformed(evt);
            }
        });

        jButtonBW.setText("Add");
        jButtonBW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBWActionPerformed(evt);
            }
        });

        jButtonOJ.setText("Add");
        jButtonOJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOJActionPerformed(evt);
            }
        });

        jButtonTea.setText("Add");
        jButtonTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTeaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDrinkLayout = new javax.swing.GroupLayout(jPanelDrink);
        jPanelDrink.setLayout(jPanelDrinkLayout);
        jPanelDrinkLayout.setHorizontalGroup(
            jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDrinkLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSmoothies)
                    .addComponent(jLabelOJ)
                    .addComponent(jLabelBW)
                    .addComponent(jLabelSoda)
                    .addComponent(jLabelHC)
                    .addComponent(jLabelIC)
                    .addComponent(jLabelTea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDrinkLayout.createSequentialGroup()
                        .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextIC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextSmoothies, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextHC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextSoda, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextBW, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextOJ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextTea, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSmoothies)
                            .addComponent(jButtonHC)
                            .addComponent(jButtonIC)
                            .addComponent(jButtonSoda)
                            .addComponent(jButtonBW)
                            .addComponent(jButtonOJ)))
                    .addComponent(jButtonTea))
                .addGap(40, 40, 40))
        );
        jPanelDrinkLayout.setVerticalGroup(
            jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDrinkLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextSmoothies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSmoothies)
                    .addComponent(jLabelSmoothies))
                .addGap(6, 6, Short.MAX_VALUE)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonIC)
                    .addComponent(jLabelIC))
                .addGap(21, 21, 21)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonHC)
                    .addComponent(jLabelHC))
                .addGap(21, 21, 21)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSoda)
                    .addComponent(jTextSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSoda))
                .addGap(22, 22, 22)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBW)
                    .addComponent(jTextBW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBW))
                .addGap(20, 20, 20)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOJ)
                    .addComponent(jTextOJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOJ))
                .addGap(22, 22, 22)
                .addGroup(jPanelDrinkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTea)
                    .addComponent(jTextTea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTea))
                .addGap(138, 138, 138))
        );

        getContentPane().add(jPanelDrink, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, 360, 480));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 5));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Drink");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, 360, 70));

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jTableDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Qty", "Price", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDisplay.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTableDisplay);
        jTableDisplay.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel6.setText("Sub-Total:");

        jLabel8.setText("Tax 9.25%:");

        jLabel10.setText("Total:");

        javax.swing.GroupLayout jPanelTotalLayout = new javax.swing.GroupLayout(jPanelTotal);
        jPanelTotal.setLayout(jPanelTotalLayout);
        jPanelTotalLayout.setHorizontalGroup(
            jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(29, 29, 29)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextSubTotal)
                    .addComponent(jTextTax)
                    .addComponent(jTextTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTotalLayout.setVerticalGroup(
            jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButtonTotal.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButtonTotal.setText("Total");
        jButtonTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Order Display", jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jTableProfit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Profit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProfit.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jTableProfit);
        jTableProfit.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setText("Total Income:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 143, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Income Management Display", jPanel8);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 340, 400, 390));
        jTabbedPane1.getAccessibleContext().setAccessibleName("Order Display\n");

        jPanelPay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Enter Amount To Pay:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Change:");

        jButtonPay.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButtonPay.setText("Pay");
        jButtonPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPayLayout = new javax.swing.GroupLayout(jPanelPay);
        jPanelPay.setLayout(jPanelPayLayout);
        jPanelPayLayout.setHorizontalGroup(
            jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPayLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(30, 30, 30)
                .addGroup(jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextAmountPay)
                    .addComponent(jTextChange, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButtonPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanelPayLayout.setVerticalGroup(
            jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPayLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextAmountPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanelPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
            .addGroup(jPanelPayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanelPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 730, 400, -1));

        jButtonExit.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 860, 80, -1));

        jButtonVoidAll.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButtonVoidAll.setText("Void All");
        jButtonVoidAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoidAllActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVoidAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 290, 110, -1));

        jButtonVoidItem.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButtonVoidItem.setText("Void Item");
        jButtonVoidItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoidItemActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVoidItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 290, -1, -1));

        jButtonTotalProfit.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButtonTotalProfit.setText("TOTAL INCOME");
        jButtonTotalProfit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTotalProfitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonTotalProfit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 850, 170, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Are sure if you want to log out?", "Take-Away Vietnamese Cuisine Application", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION){
            EmployeeLogin screen = new EmployeeLogin();
            screen.setVisible(true);
            this.dispose();
    }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextLSpecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLSpecialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLSpecialActionPerformed

    private void jTextSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSodaActionPerformed

    private void jButtonTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTotalActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();

        // Assign all the amount item TextField to all the variables that we created on Menu class
        // And use the methods that we created on Menu class as well
        itemPrice.smallSpecial = Integer.parseInt(jTextSSpecial.getText());
        itemPrice.smallBrisket = Integer.parseInt(jTextSBrisket.getText());
        itemPrice.smallSteak = Integer.parseInt(jTextSSteak.getText());
        itemPrice.smallSandF = Integer.parseInt(jTextSSandF.getText());
        itemPrice.smallSTT = Integer.parseInt(jTextSSTT.getText());       
        itemPrice.smallMeatball = Integer.parseInt(jTextSMeatball.getText());
        
        itemPrice.largeSpecial = Integer.parseInt(jTextLSpecial.getText());
        itemPrice.largeBrisket = Integer.parseInt(jTextLBrisket.getText());
        itemPrice.largeSteak = Integer.parseInt(jTextLSteak.getText());
        itemPrice.largeSandF = Integer.parseInt(jTextLSandF.getText());
        itemPrice.largeSTT = Integer.parseInt(jTextLSTT.getText());       
        itemPrice.largeMeatball = Integer.parseInt(jTextLMeatball.getText());
        
        itemPrice.Smoothies = Integer.parseInt(jTextSmoothies.getText());
        itemPrice.IC = Integer.parseInt(jTextIC.getText());
        itemPrice.HC = Integer.parseInt(jTextHC.getText());
        itemPrice.Soda = Integer.parseInt(jTextSoda.getText());
        itemPrice.BW = Integer.parseInt(jTextBW.getText());
        itemPrice.OJ = Integer.parseInt(jTextOJ.getText());
        itemPrice.Tea = Integer.parseInt(jTextTea.getText());
        
        double subTotalField = itemPrice.getTotal();
        double subTotal = 0.00;
        
        
        
        // This button can only calculate if you click Add button first   
        if (model.getRowCount() > 0)
        {
            for (int i = 0; i < model.getRowCount(); i++)
                subTotal += Double.parseDouble(model.getValueAt(i,3).toString());

            String SubTotal = String.format("%.2f", subTotal);
            jTextSubTotal.setText(SubTotal);
            double tax = itemPrice.getTax(subTotal);
            double total = subTotal + tax;
            String Tax = String.format("%.2f", tax);
            jTextTax.setText(Tax);
            String Total = String.format("%.2f", total);
            jTextTotal.setText(Total);
        }
        
        else if (subTotalField > 0 && model.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(rootPane,"Please click Add");
        }
        
        else if (subTotalField < 0)
        {
            JOptionPane.showMessageDialog(rootPane,"Please enter the positive quantity");
        }
        
        else 
        {
            JOptionPane.showMessageDialog(rootPane,"Please enter the quantity of item");
        }
        
        
    }//GEN-LAST:event_jButtonTotalActionPerformed

    private void jButtonPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPayActionPerformed
        // TODO add your handling code here:
        
        if (jTextAmountPay.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane, "The Amount Should Not Be Empty !!");
        } 
             
        else if(Double.parseDouble(jTextTotal.getText()) <= Double.parseDouble(jTextAmountPay.getText()))
        {
            double change = Float.valueOf(jTextAmountPay.getText()) - Double.parseDouble(jTextTotal.getText());
            String Change = String.format("%.2f", change);
            jTextChange.setText(Change);
            
            // Update to profit
            DefaultTableModel model = (DefaultTableModel) jTableProfit.getModel();
            double profit = Float.valueOf(jTextTotal.getText());
            model.addRow(new Object[]{profit});
            
       
            
            // Set it to new order
            JTextField cleartext = null;
        
            for (Component c:jPanelPho.getComponents()){
                if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                }
            }
            
            for (Component c:jPanelDrink.getComponents()){
                if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
                }
            }
            
            for (Component c:jPanelTotal.getComponents()){
                if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
                }
            }

            DefaultTableModel Model = (DefaultTableModel) jTableDisplay.getModel();
            Model.setRowCount(0);
        }
        
        else
        {     
            JOptionPane.showMessageDialog(rootPane, "The amount is not enough. Please pay more !!");     
        }     
         
    }//GEN-LAST:event_jButtonPayActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(rootPane, "Do you want to exit? ", "Pho Viet Management System", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION){
        System.exit(0);
    }
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonVoidAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoidAllActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        JTextField cleartext = null;
        
        for (Component c:jPanelPho.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
            }
        }
        for (Component c:jPanelDrink.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("0");
            }
        }

        for (Component c:jPanelTotal.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButtonVoidAllActionPerformed

    private void jButtonVoidItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoidItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        if (jTableDisplay.getSelectedRow() == -1){
            if(jTableDisplay.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane, "There is nothing to void");
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Please choose the item you need to void");
            }
        }
        else{
            model.removeRow(jTableDisplay.getSelectedRow());
        }
    }//GEN-LAST:event_jButtonVoidItemActionPerformed

    private void jButtonSSpecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSSpecialActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
         
        if(!jTextSSpecial.getText().equals("0") && !jTextSSpecial.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSSpecial.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSpecial.getText(),jTextSSpecial.getText(),itemPrice.smallSpecialp, itemPrice.smallSpecialp * Integer.parseInt(jTextSSpecial.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSSpecialActionPerformed

    private void jButtonLSpecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLSpecialActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLSpecial.getText().equals("0") && !jTextLSpecial.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLSpecial.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSpecial.getText(),jTextLSpecial.getText(),itemPrice.largeSpecialp, itemPrice.largeSpecialp * Integer.parseInt(jTextLSpecial.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLSpecialActionPerformed

    private void jButtonSSteakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSSteakActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSSteak.getText().equals("0") && !jTextSSteak.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSSteak.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSteak.getText(),jTextSSteak.getText(),itemPrice.smallSteakp, itemPrice.smallSteakp * Integer.parseInt(jTextSSteak.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSSteakActionPerformed

    private void jButtonLSteakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLSteakActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLSteak.getText().equals("0") && !jTextLSteak.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLSteak.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSteak.getText(),jTextLSteak.getText(),itemPrice.largeSteakp, itemPrice.largeSteakp * Integer.parseInt(jTextLSteak.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLSteakActionPerformed

    private void jButtonSBrisketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSBrisketActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSBrisket.getText().equals("0") && !jTextSBrisket.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSBrisket.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelBrisket.getText(),jTextSBrisket.getText(),itemPrice.smallBrisketp, itemPrice.smallBrisketp * Integer.parseInt(jTextSBrisket.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSBrisketActionPerformed

    private void jButtonLBrisketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLBrisketActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLBrisket.getText().equals("0") && !jTextLBrisket.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLBrisket.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelBrisket.getText(),jTextLBrisket.getText(),itemPrice.largeBrisketp, itemPrice.largeBrisketp * Integer.parseInt(jTextLBrisket.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLBrisketActionPerformed

    private void jButtonSSandFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSSandFActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSSandF.getText().equals("0") && !jTextSSandF.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSSandF.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSandF.getText(),jTextSSandF.getText(),itemPrice.smallSandFp, itemPrice.smallSandFp * Integer.parseInt(jTextSSandF.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSSandFActionPerformed

    private void jButtonLSandFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLSandFActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLSandF.getText().equals("0") && !jTextLSandF.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLSandF.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSandF.getText(),jTextLSandF.getText(),itemPrice.largeSandFp, itemPrice.largeSandFp * Integer.parseInt(jTextLSandF.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLSandFActionPerformed

    private void jButtonSSTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSSTTActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSSTT.getText().equals("0") && !jTextSSTT.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSSTT.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSTT.getText(),jTextSSTT.getText(),itemPrice.smallSTTp, itemPrice.smallSTTp * Integer.parseInt(jTextSSTT.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSSTTActionPerformed

    private void jButtonLSTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLSTTActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLSTT.getText().equals("0") && !jTextLSTT.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLSTT.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSTT.getText(),jTextLSTT.getText(),itemPrice.largeSTTp, itemPrice.largeSTTp * Integer.parseInt(jTextLSTT.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLSTTActionPerformed

    private void jButtonSMeatballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSMeatballActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSMeatball.getText().equals("0") && !jTextSMeatball.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSMeatball.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelMeatball.getText(),jTextSMeatball.getText(),itemPrice.smallMeatballp, itemPrice.smallMeatballp * Integer.parseInt(jTextSMeatball.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSMeatballActionPerformed

    private void jButtonLMeatballActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLMeatballActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextLMeatball.getText().equals("0") && !jTextLMeatball.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextLMeatball.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelMeatball.getText(),jTextLMeatball.getText(),itemPrice.largeMeatballp, itemPrice.largeMeatballp * Integer.parseInt(jTextLMeatball.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonLMeatballActionPerformed

    private void jButtonSmoothiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSmoothiesActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();

        if(!jTextSmoothies.getText().equals("0") && !jTextSmoothies.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSmoothies.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSmoothies.getText(),jTextSmoothies.getText(),itemPrice.Smoothiesp, itemPrice.Smoothiesp * Integer.parseInt(jTextSmoothies.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSmoothiesActionPerformed

    private void jButtonICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonICActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();

        if(!jTextIC.getText().equals("0") && !jTextIC.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextIC.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelIC.getText(),jTextIC.getText(),itemPrice.ICp, itemPrice.ICp * Integer.parseInt(jTextIC.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonICActionPerformed

    private void jButtonHCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHCActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
       
        if(!jTextHC.getText().equals("0") && !jTextHC.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextHC.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelHC.getText(),jTextHC.getText(),itemPrice.HCp, itemPrice.HCp * Integer.parseInt(jTextHC.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonHCActionPerformed

    private void jButtonSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSodaActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextSoda.getText().equals("0") && !jTextSoda.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextSoda.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelSoda.getText(),jTextSoda.getText(),itemPrice.Sodap, itemPrice.Sodap * Integer.parseInt(jTextSoda.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonSodaActionPerformed

    private void jButtonBWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBWActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextBW.getText().equals("0") && !jTextBW.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextBW.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelBW.getText(),jTextBW.getText(),itemPrice.BWp, itemPrice.BWp * Integer.parseInt(jTextBW.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonBWActionPerformed

    private void jButtonOJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOJActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
      
        if(!jTextOJ.getText().equals("0") && !jTextOJ.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextOJ.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelOJ.getText(),jTextOJ.getText(),itemPrice.OJp, itemPrice.OJp * Integer.parseInt(jTextOJ.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonOJActionPerformed

    private void jButtonTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTeaActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = (DefaultTableModel) jTableDisplay.getModel();
        
        if(!jTextTea.getText().equals("0") && !jTextTea.getText().trim().equals(""))
        {
            if(Integer.parseInt(jTextTea.getText()) < 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot add a negative amount");
            }
            else 
                model.addRow(new Object[]{jLabelTea.getText(),jTextTea.getText(),itemPrice.Teap, itemPrice.Teap * Integer.parseInt(jTextTea.getText())});
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Quantity should not be 0 or empty");
        }
        
        // Clear the Pay Panel
        JTextField cleartext = null;
        for (Component c:jPanelPay.getComponents()){
            if (c.getClass().toString().contains("javax.swing.JTextField")){
                cleartext = (JTextField)c;
                cleartext.setText("");
            }
        }
    }//GEN-LAST:event_jButtonTeaActionPerformed

    private void jButtonTotalProfitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTotalProfitActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        DefaultTableModel Model = (DefaultTableModel) jTableProfit.getModel();
        
        double total = 0.00;
        for (int i = 0; i < Model.getRowCount(); i++)
        {
            total += Double.parseDouble(Model.getValueAt(i,0).toString());
        }
        String totalProfit = String.format("$%.2f",total);
        jTextProfit.setText(totalProfit);
    }//GEN-LAST:event_jButtonTotalProfitActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBW;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonHC;
    private javax.swing.JButton jButtonIC;
    private javax.swing.JButton jButtonLBrisket;
    private javax.swing.JButton jButtonLMeatball;
    private javax.swing.JButton jButtonLSTT;
    private javax.swing.JButton jButtonLSandF;
    private javax.swing.JButton jButtonLSpecial;
    private javax.swing.JButton jButtonLSteak;
    private javax.swing.JButton jButtonOJ;
    private javax.swing.JButton jButtonPay;
    private javax.swing.JButton jButtonSBrisket;
    private javax.swing.JButton jButtonSMeatball;
    private javax.swing.JButton jButtonSSTT;
    private javax.swing.JButton jButtonSSandF;
    private javax.swing.JButton jButtonSSpecial;
    private javax.swing.JButton jButtonSSteak;
    private javax.swing.JButton jButtonSmoothies;
    private javax.swing.JButton jButtonSoda;
    private javax.swing.JButton jButtonTea;
    private javax.swing.JButton jButtonTotal;
    private javax.swing.JButton jButtonTotalProfit;
    private javax.swing.JButton jButtonVoidAll;
    private javax.swing.JButton jButtonVoidItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBW;
    private javax.swing.JLabel jLabelBrisket;
    private javax.swing.JLabel jLabelHC;
    private javax.swing.JLabel jLabelIC;
    private javax.swing.JLabel jLabelMeatball;
    public javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelOJ;
    private javax.swing.JLabel jLabelSTT;
    private javax.swing.JLabel jLabelSandF;
    private javax.swing.JLabel jLabelSmoothies;
    private javax.swing.JLabel jLabelSoda;
    private javax.swing.JLabel jLabelSpecial;
    private javax.swing.JLabel jLabelSteak;
    private javax.swing.JLabel jLabelTea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelDrink;
    private javax.swing.JPanel jPanelPay;
    private javax.swing.JPanel jPanelPho;
    private javax.swing.JPanel jPanelTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableDisplay;
    private javax.swing.JTable jTableProfit;
    private javax.swing.JTextField jTextAmountPay;
    private javax.swing.JTextField jTextBW;
    private javax.swing.JTextField jTextChange;
    private javax.swing.JTextField jTextHC;
    private javax.swing.JTextField jTextIC;
    private javax.swing.JTextField jTextLBrisket;
    private javax.swing.JTextField jTextLMeatball;
    private javax.swing.JTextField jTextLSTT;
    private javax.swing.JTextField jTextLSandF;
    private javax.swing.JTextField jTextLSpecial;
    private javax.swing.JTextField jTextLSteak;
    private javax.swing.JTextField jTextOJ;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField jTextProfit;
    private javax.swing.JTextField jTextSBrisket;
    private javax.swing.JTextField jTextSMeatball;
    private javax.swing.JTextField jTextSSTT;
    private javax.swing.JTextField jTextSSandF;
    private javax.swing.JTextField jTextSSpecial;
    private javax.swing.JTextField jTextSSteak;
    private javax.swing.JTextField jTextSmoothies;
    private javax.swing.JTextField jTextSoda;
    private javax.swing.JTextField jTextSubTotal;
    private javax.swing.JTextField jTextTax;
    private javax.swing.JTextField jTextTea;
    private javax.swing.JTextField jTextTotal;
    // End of variables declaration//GEN-END:variables
}
